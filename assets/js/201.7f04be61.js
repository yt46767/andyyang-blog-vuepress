(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{640:function(t,e,s){"use strict";s.r(e);var a=s(7),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"判断"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断"}},[t._v("#")]),t._v(" 判断")]),t._v(" "),e("h4",{attrs:{id:"object-is"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-is"}},[t._v("#")]),t._v(" Object.is()")]),t._v(" "),e("p",[t._v("判断两个值是否是相同的值。"),e("RouterLink",{attrs:{to:"/1.基础知识/3.JS/数据的相等性判断.html"}},[t._v("参考链接：数据的相等性判断")])],1),t._v(" "),e("h4",{attrs:{id:"object-isextensible"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-isextensible"}},[t._v("#")]),t._v(" Object.isExtensible()")]),t._v(" "),e("ul",[e("li",[t._v("判断一个对象是否是可扩展的（是否可以在它上面添加新的属性）。")]),t._v(" "),e("li",[t._v("默认情况下，对象是可扩展的：即可以为他们添加新的属性。")]),t._v(" "),e("li",[t._v("以及它们的 __proto__属性可以被更改。")]),t._v(" "),e("li",[t._v("Object.preventExtensions，Object.seal 或 Object.freeze 方法都可以标记一个对象为不可扩展（non-extensible）。")])]),t._v(" "),e("h4",{attrs:{id:"object-isfrozen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-isfrozen"}},[t._v("#")]),t._v(" Object.isFrozen()")]),t._v(" "),e("ul",[e("li",[t._v("判断一个对象是否被冻结。")]),t._v(" "),e("li",[t._v("一个对象是冻结的是指它不可扩展，所有属性都是不可配置的，且所有数据属性（即没有getter或setter组件的访问器的属性）都是不可写的。")])]),t._v(" "),e("h4",{attrs:{id:"object-issealed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object-issealed"}},[t._v("#")]),t._v(" Object.isSealed()")]),t._v(" "),e("ul",[e("li",[t._v("判断一个对象是否被密封。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);